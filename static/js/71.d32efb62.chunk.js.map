{"version":3,"file":"static/js/71.d32efb62.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  margin-bottom: 40px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Label = styled.label`\n  margin-right: 20px;\n  font-family: ${p => p.theme.font.main};\n  font-size: 17px;\n`;\n\nconst Input = styled.input`\n  margin-left: 7px;\n  height: 30px;\n  border-radius: 12px;\n  border-color: ${p => p.theme.colors.dark};\n  outline: none;\n  padding: 0 5px 0 7px;\n  font-family: ${p => p.theme.font.main};\n\n  font-size: 15px;\n  color: ${p => p.theme.colors.dark};\n  transition: all 250ms linear;\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 10px 5px ${p => p.theme.colors.accent};\n  }\n`;\n\nconst SubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: inherit;\n  font-size: 15px;\n  font-weight: 600;\n  height: 30px;\n  border-radius: 12px;\n  outline: none;\n  padding: 0 20px 0 20px;\n  color: ${p => p.theme.colors.dark};\n  background-color: ${p => p.theme.colors.accent};\n  transition: all 250ms linear;\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 10px 5px ${p => p.theme.colors.accent};\n  }\n`;\n\nexport { Form, Label, Input, SubmitButton };\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport { Form, Label, Input, SubmitButton } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const resetField = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n    const names = contacts.map(item => item.name);\n    if (names.includes(name)) {\n      return Notify.warning(`${name} is already in contacts`, {\n        position: 'center-top',\n      });\n    }\n    dispatch(addContact({ name: name, number: number }));\n    resetField();\n  };\n\n  const onInputChange = evt => {\n    switch (evt.currentTarget.name) {\n      case 'name':\n        setName(evt.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(evt.currentTarget.value);\n        break;\n      default:\n        console.log('There is no such value');\n    }\n  };\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          placeholder=\"Enter the name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={onInputChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter the number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={onInputChange}\n        />\n      </Label>\n\n      <SubmitButton type=\"submit\">Add contact</SubmitButton>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\nconst FilterInput = styled.input`\n  margin-left: 7px;\n  height: 30px;\n  border-radius: 12px;\n  border-color: ${p => p.theme.colors.dark};\n  outline: none;\n  padding: 0 5px 0 7px;\n  font-family: ${p => p.theme.font.main};\n  font-size: 15px;\n  margin-bottom: 20px;\n  color: ${p => p.theme.colors.dark};\n  transition: all 250ms linear;\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 10px 5px ${p => p.theme.colors.accent};\n  }\n`;\n\nconst FilterLabel = styled.label`\n  margin-right: 20px;\n  font-family: ${p => p.theme.font.main};\n  font-size: 17px;\n`;\nexport { FilterInput, FilterLabel };\n","import { useDispatch } from 'react-redux';\n\nimport { filterContacts } from 'redux/contacts/slices/filterSlice';\n\nimport { FilterInput, FilterLabel } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilter = evt => {\n    dispatch(filterContacts(evt.currentTarget.value));\n  };\n\n  return (\n    <FilterLabel>\n      Search\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Start typing a name\"\n        onChange={onFilter}\n      ></FilterInput>\n    </FilterLabel>\n  );\n};\n","import styled from 'styled-components';\n\nconst ContactsList = styled.ul``;\nconst ContactsItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-family: ${p => p.theme.font.main};\n  font-weight: 700;\n  font-size: 16px;\n  border: 1px solid black;\n  border-radius: 10px;\n  padding: 7px;\n  background-color: ${p => p.theme.colors.accent};\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nconst ContactName = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  svg {\n    margin-right: 7px;\n    width: 23px;\n    height: 23px;\n    color: ${p => p.theme.colors.dark};\n  }\n`;\nconst ContactNumber = styled.span`\n  margin-right: 20px;\n`;\nconst DeleteButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: inherit;\n  height: 27px;\n  border-radius: 12px;\n  outline: none;\n  padding: 0 15px 0 15px;\n  color: ${p => p.theme.colors.accent};\n  background-color: ${p => p.theme.colors.dark};\n  transition: all 250ms linear;\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 10px 5px ${p => p.theme.colors.dark};\n  }\n`;\n\nexport { ContactName, ContactNumber, ContactsItem, ContactsList, DeleteButton };\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FaRegUserCircle } from 'react-icons/fa';\n\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport {\n  ContactName,\n  ContactNumber,\n  ContactsItem,\n  ContactsList,\n  DeleteButton,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const filterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const filtered = filterContacts();\n\n  return (\n    <ContactsList>\n      {filtered.map(({ id, name, number }) => (\n        <ContactsItem key={id}>\n          <ContactName>\n            <FaRegUserCircle /> {name}\n          </ContactName>\n          <ContactNumber> {number}</ContactNumber>\n          <DeleteButton\n            type=\"button\"\n            onClick={() => {\n              dispatch(deleteContact(id));\n            }}\n          >\n            Delete\n          </DeleteButton>\n        </ContactsItem>\n      ))}\n    </ContactsList>\n  );\n};\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  padding: 20px;\n  max-width: 700px;\n`;\n\nconst Title = styled.h1`\n  display: flex;\n  align-items: center;\n  font-family: ${p => p.theme.font.main};\n  font-size: 40px;\n  margin-bottom: 20px;\n  svg {\n    height: 25px;\n    width: 40px;\n    color: ${p => p.theme.colors.dark};\n  }\n`;\n\nconst ContactsTitle = styled.h2`\n  display: flex;\n  align-items: center;\n  font-family: ${p => p.theme.font.main};\n  font-size: 30px;\n  margin-bottom: 15px;\n  svg {\n    height: 23px;\n    width: 40px;\n    margin-right: 3px;\n    color: ${p => p.theme.colors.dark};\n  }\n`;\n\nexport { Container, Title, ContactsTitle };\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { FaUserFriends, FaPhoneAlt } from 'react-icons/fa';\n\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { Container, Title, ContactsTitle } from './Contacts.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>\n        <FaPhoneAlt />\n        Phonebook\n      </Title>\n      <ContactForm />\n      <ContactsTitle>\n        <FaUserFriends />\n        Contacts\n      </ContactsTitle>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","Form","styled","Label","p","theme","font","main","Input","colors","dark","accent","SubmitButton","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","onInputChange","evt","currentTarget","value","console","log","onSubmit","preventDefault","map","item","includes","Notify","position","addContact","type","pattern","placeholder","title","required","onChange","FilterInput","FilterLabel","Filter","filterContacts","ContactsList","ContactsItem","ContactName","ContactNumber","DeleteButton","ContactList","filtered","normalizedFilter","toLowerCase","contact","id","onClick","deleteContact","Container","Title","ContactsTitle","useEffect","fetchContacts"],"sourceRoot":""}